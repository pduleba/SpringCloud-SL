#
# Pre-Conditions:
# - run discovery-server on port 8761 [Eureka Discovery service]

# - run food-service-weather-server on port 9001
# - run food-service-weather-client on port 9000

# - run food-service-time-server on port 4001 [cluster A]
# - run food-service-time-server on port 4002 [cluster A]
# - run food-service-time-ribbon-client on port 4000 [Netflix Ribbon Driven Load-Balancing]

# - run food-service-hystrix-dashboard on port 8000
# - run food-service-hystrix-dashboard-turbine-aggregator on port 8001
# Verification:
# - http://localhost:8761 [Eureka Discovery Server]

#   [FOOD SERVICE TIME server/client]
# - http://localhost:4001 [to access cluster A time service]
# - http://localhost:4002 [to access cluster B time service]
# - http://localhost:4000/current/time [to access load balanced access to cluster A/B] - should not be evenly balanced between clusters A and B (as it is defined in config)

#   [FOOD SERVICE WEATHER server/client]
# - http://localhost:9001/weather [Food Service Weather Server]
# - http://localhost:9000/current/weather [Food Service Weather Client with Hystrix]
#   if stopped WeatherService should call fallbackMethod = unknown()

#   [FOOD SERVICE HYSTRIX DASHBOARD]
# - http://localhost:8000/hystrix [Hystrix Dashboard]
#   with http://localhost:9000/actuator/hystrix.stream for [Food Service Weather Client Hystrix dashboard access]
#   with http://localhost:4000/actuator/hystrix.stream for [Food Service Time Client Hystrix dashboard access]
#
#   [FOOD SERVICE HYSTRIX DASHBOARD TURBINE AGGREGATOR]
# - http://localhost:8000/hystrix [Hystrix Dashboard]
#   with http://localhost:8001/turbine.stream for [Food Service Weather Client Hystrix dashboard access]
#
#   hit multiple times to generate metrics
#       http://localhost:9000/current/weather
#       http://localhost:4000/current/time
#   See current actuators enter
#       http://localhost:9000/actuator
#       http://localhost:4000/actuator
#
server.port=8001
spring.application.name=food-service-hystrix-dashboard-turbine-aggregator
# Discovery Service URL on cluster (i.e. AWS) defaultZone
eureka.client.server-url.defaultZone=http://localhost:8761/eureka
# Which Application/Services Hystrix Dashborads to aggregate
turbine.app-config=food-service-time-ribbon-client,food-service-weather-client
turbine.cluster-name-expression='default'