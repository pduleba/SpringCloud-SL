#
# Pre-Conditions:
# - run discovery-server [Eureka Discovery service]
# - run food-service-weather-server on port 9000
# - run food-service-weather-client on port 8000
# - run food-service-time-server om port 4444 [cluster A]
# - run food-service-time-server om port 5555 [cluster A]
# - run food-service-time-ribbon-client on port 6666 [Netflix Ribbon Driven Load-Balancing]
# - run food-service-hystrix-dashboard on port 8080
# Verification:
# - http://localhost:8761 [Eureka Discovery Server]

#   [FOOD SERVICE TIME server/client]
# - http://localhost:4444 [to access cluster A time service]
# - http://localhost:5555 [to access cluster B time service]
# - http://localhost:8080  [to access load balanced access to cluster A/B] - should not be evenly balanced between clusters A and B (as it is defined in config)

#   [FOOD SERVICE WEATHER server/client]
# - http://localhost:9000/weather [Food Service Weather Server]
#   if stopped WeatherService should call fallbackMethod = unknown()
# - http://localhost:8000/current/weather [Food Service Weather Client with Hystrix]

#   [FOOD SERVICE HYSTRIX DASHBOARD]
# - http://localhost:8080/hystrix [Hystrix Dashboard]
#   hit multiple times to generate metrics http://localhost:8000/current/weather
#   add stream of food-service-weather-client by http://localhost:8000/actuator/hystrix.stream
#   to see current actuators enter http://localhost:8000/actuator/
#
